"use strict";(self.webpackChunkreceipt_wrangler_doc=self.webpackChunkreceipt_wrangler_doc||[]).push([[612],{57379:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"configuration-examples/mariadb","title":"mariadb","description":"Below are some examples for a mariadb/mysql based configuration.","source":"@site/versioned_docs/version-5.x/configuration-examples/mariadb.md","sourceDirName":"configuration-examples","slug":"/configuration-examples/mariadb","permalink":"/docs/configuration-examples/mariadb","draft":false,"unlisted":false,"tags":[],"version":"5.x","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuration Examples","permalink":"/docs/category/configuration-examples"},"next":{"title":"postgresql","permalink":"/docs/configuration-examples/postgresql"}}');var o=r(74848),t=r(28453);const i={},s="mariadb",c={},l=[{value:"Docker compose microservices (deprecated)",id:"docker-compose-microservices-deprecated",level:2},{value:"Docker compose monolithic",id:"docker-compose-monolithic",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"mariadb",children:"mariadb"})}),"\n",(0,o.jsx)(n.p,{children:"Below are some examples for a mariadb/mysql based configuration."}),"\n",(0,o.jsx)(n.h2,{id:"docker-compose-microservices-deprecated",children:"Docker compose microservices (deprecated)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:'version: "3.5"\nservices:\n  db:\n    image: library/mariadb:10\n    restart: always\n    command: --sql-mode="ANSI_QUOTES"\n    environment:\n      - MYSQL_ROOT_PASSWORD=change_me\n      - MYSQL_USER=wrangler\n      - MYSQL_PASSWORD=change_me\n      - MYSQL_DATABASE=wrangler\n    volumes:\n      - ./mariadb:/var/lib/mysql\n    healthcheck:\n      test: [ "CMD", "mysqladmin", "ping", "--silent" ]\n      interval: 10s\n      timeout: 10s\n      retries: 5\n\n  proxy:\n    image: noah231515/receipt-wrangler-proxy:latest\n    ports:\n      - 9082:80\n    depends_on:\n      - api\n      - frontend\n\n  api:\n    image: noah231515/receipt-wrangler-api:latest\n    restart: always\n    working_dir: /go/api\n    command: ./api --env prod\n    ports:\n      - 9080:8081\n    volumes:\n      - ./data:/go/api/data\n      - ./logs:/go/api/logs\n    environment:\n      - ENCRYPTION_KEY=encryptionKey\n      - SECRET_KEY=secretKey\n      - DB_USER=wrangler\n      - DB_PASSWORD=changeMe\n      - DB_NAME=wrangler\n      - DB_HOST=db\n      - DB_PORT=3306\n      - DB_ENGINE=mariadb\n    depends_on:\n      db:\n        condition: service_healthy\n\n  frontend:\n    image: noah231515/receipt-wrangler-desktop:latest\n    restart: always\n    ports:\n      - 9081:80\n'})}),"\n",(0,o.jsx)(n.h2,{id:"docker-compose-monolithic",children:"Docker compose monolithic"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:'services:\n  db:\n    image: library/mariadb:10\n    restart: always\n    environment:\n      - MYSQL_ROOT_PASSWORD=change_me\n      - MYSQL_USER=wrangler\n      - MYSQL_PASSWORD=change_me\n      - MYSQL_DATABASE=wrangler\n    volumes:\n      - ./mariadb:/var/lib/mysql\n    healthcheck:\n      test: [ "CMD", "mysqladmin", "ping", "--silent" ]\n      interval: 10s\n      timeout: 10s\n      retries: 5\n\n  wrangler:\n    image: noah231515/receipt-wrangler:latest\n    entrypoint: ./entrypoint.sh\n    restart: always\n    volumes:\n      - ./data:/app/receipt-wrangler-api/data\n      - ./sqlite:/app/receipt-wrangler-api/sqlite\n    environment:\n      - ENCRYPTION_KEY=encryptionKey\n      - SECRET_KEY=secretKey\n      - DB_USER=wrangler\n      - DB_PASSWORD=changeMe\n      - DB_NAME=wrangler\n      - DB_HOST=db\n      - DB_PORT=3306\n      - DB_ENGINE=mariadb\n    depends_on:\n      db:\n        condition: service_healthy\n    ports:\n      - 9082:80\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>s});var a=r(96540);const o={},t=a.createContext(o);function i(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);