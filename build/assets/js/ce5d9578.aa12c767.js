"use strict";(self.webpackChunkreceipt_wrangler_doc=self.webpackChunkreceipt_wrangler_doc||[]).push([[1675],{51227:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"configuration-examples/mariadb","title":"mariadb","description":"Below are some examples for a mariadb/mysql based configuration.","source":"@site/docs/configuration-examples/mariadb.md","sourceDirName":"configuration-examples","slug":"/configuration-examples/mariadb","permalink":"/docs/next/configuration-examples/mariadb","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuration Examples","permalink":"/docs/next/category/configuration-examples"},"next":{"title":"postgresql","permalink":"/docs/next/configuration-examples/postgresql"}}');var i=a(74848),o=a(28453);const t={},s="mariadb",c={},l=[{value:"Main config",id:"main-config",level:2},{value:"Docker compose microservices",id:"docker-compose-microservices",level:2},{value:"Docker compose monolithic",id:"docker-compose-monolithic",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mariadb",children:"mariadb"})}),"\n",(0,i.jsx)(n.p,{children:"Below are some examples for a mariadb/mysql based configuration."}),"\n",(0,i.jsx)(n.h2,{id:"main-config",children:"Main config"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",metastring:'title="config.prod.json"',children:'{\n  "secretKey": "secretKey",\n  "aiSettings": {\n    "type": "openAi",\n    "url": "urlToLocallyHostedLLM",\n    "key": "openAiKey", \n    "numWorkers": 1,\n    "ocrEngine": "tesseract"\n  },\n  "emailPollingInterval": 1800,\n  "emailSettings": [\n    {\n      "host": "emailHost",\n      "port": "emailPort",\n      "username": "emailAddress",\n      "password": "password/apiKey"\n    }\n  ],\n  "features": {\n    "enableLocalSignUp": true,\n    "aiPoweredReceipts": true\n  },\n  "database": {\n    "user": "wrangler",\n    "password": "changeMe",\n    "name": "wrangler",\n    "host": "db:3306",\n    "engine": "mariadb"\n  }\n}\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"docker-compose-microservices",children:"Docker compose microservices"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:'version: "3.5"\nservices:\n  db:\n    image: library/mariadb:10\n    restart: always\n    command: --sql-mode="ANSI_QUOTES"\n    environment:\n      MYSQL_ROOT_PASSWORD: change_me\n      MYSQL_USER: wrangler\n      MYSQL_PASSWORD: change_me\n      MYSQL_DATABASE: wrangler\n    volumes:\n      - ./mariadb:/var/lib/mysql\n    healthcheck:\n      test: ["CMD", "mysqladmin", "ping", "--silent"]\n      interval: 10s\n      timeout: 10s\n      retries: 5\n\n  proxy:\n    image: noah231515/receipt-wrangler-proxy:latest\n    ports:\n      - 9082:80\n    depends_on:\n      - api\n      - frontend\n\n  api:\n    image: noah231515/receipt-wrangler-api:latest\n    restart: always\n    working_dir: /go/api\n    command: ./api --env prod\n    ports:\n      - 9080:8081\n    volumes:\n      - ./config:/go/api/config\n      - ./data:/go/api/data\n      - ./logs:/go/api/logs\n    depends_on:\n      db:\n        condition: service_healthy\n\n  frontend:\n    image: noah231515/receipt-wrangler-desktop:latest\n    restart: always\n    ports:\n      - 9081:80\n'})}),"\n",(0,i.jsx)(n.h2,{id:"docker-compose-monolithic",children:"Docker compose monolithic"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:'services:\n  db:\n    image: library/mariadb:10\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: change_me\n      MYSQL_USER: wrangler\n      MYSQL_PASSWORD: change_me\n      MYSQL_DATABASE: wrangler\n    volumes:\n      - ./mariadb:/var/lib/mysql\n    healthcheck:\n      test: ["CMD", "mysqladmin", "ping", "--silent"]\n      interval: 10s\n      timeout: 10s\n      retries: 5\n\n  wrangler:\n    image: noah231515/receipt-wrangler:latest\n    entrypoint: ./entrypoint.sh\n    restart: always\n    volumes:\n      - ./config:/app/receipt-wrangler-api/config\n      - ./data:/app/receipt-wrangler-api/data\n      - ./sqlite:/app/receipt-wrangler-api/sqlite\n    depends_on:\n      db:\n        condition: service_healthy\n    ports:\n      - 9082:80\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>s});var r=a(96540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);