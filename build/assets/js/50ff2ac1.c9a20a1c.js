"use strict";(self.webpackChunkreceipt_wrangler_doc=self.webpackChunkreceipt_wrangler_doc||[]).push([[8063],{32349:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=r(74848),t=r(28453);const s={},a="postgresql",i={id:"configuration-examples/postgresql",title:"postgresql",description:"Below are some examples for a postgresql based configuration.",source:"@site/versioned_docs/version-5.x/configuration-examples/postgresql.md",sourceDirName:"configuration-examples",slug:"/configuration-examples/postgresql",permalink:"/docs/configuration-examples/postgresql",draft:!1,unlisted:!1,tags:[],version:"5.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"mariadb",permalink:"/docs/configuration-examples/mariadb"},next:{title:"sqlite",permalink:"/docs/configuration-examples/sqlite"}},c={},l=[{value:"Docker compose microservices (deprecated)",id:"docker-compose-microservices-deprecated",level:2},{value:"Docker compose monolithic",id:"docker-compose-monolithic",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"postgresql",children:"postgresql"})}),"\n",(0,o.jsx)(n.p,{children:"Below are some examples for a postgresql based configuration."}),"\n",(0,o.jsx)(n.h2,{id:"docker-compose-microservices-deprecated",children:"Docker compose microservices (deprecated)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:'version: "3.5"\nservices:\n  db:\n    image: postgres\n    restart: always\n    environment:\n      - POSTGRES_USER=wrangler\n      - PGUSER=wrangler\n      - POSTGRES_PASSWORD=change_me\n      - POSTGRES_DB=wrangler\n    volumes:\n      - ./pgsql:/var/lib/pgsql\n    healthcheck:\n      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]\n      interval: 10s\n      timeout: 10s\n      retries: 5\n\n  proxy:\n    image: noah231515/receipt-wrangler-proxy:latest\n    ports:\n      - 9082:80\n    depends_on:\n      - api\n      - frontend\n\n  api:\n    image: noah231515/receipt-wrangler-api:latest\n    restart: always\n    command: ./api --env prod\n    ports:\n      - 9080:8081\n    volumes:\n      - ./data:/go/api/data\n      - ./logs:/go/api/logs\n    environment:\n      - ENCRYPTION_KEY=encryptionKey\n      - SECRET_KEY=secretKey\n      - DB_USER=wrangler\n      - DB_PASSWORD=changeMe\n      - DB_NAME=wrangler\n      - DB_HOST=db\n      - DB_PORT=5432\n      - DB_ENGINE=postgresql\n    depends_on:\n      db:\n        condition: service_healthy\n\n  frontend:\n    image: noah231515/receipt-wrangler-desktop:latest\n    restart: always\n    ports:\n      - 9081:80\n'})}),"\n",(0,o.jsx)(n.h2,{id:"docker-compose-monolithic",children:"Docker compose monolithic"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:'services:\n  db:\n    image: postgres\n    restart: always\n    environment:\n      - POSTGRES_USER=wrangler\n      - POSTGRES_PASSWORD=change_me\n      - POSTGRES_DB=wrangler\n    volumes:\n      - ./pgsql:/var/lib/pgsql\n    healthcheck:\n      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]\n      interval: 10s\n      timeout: 10s\n      retries: 5\n\n  wrangler:\n    image: noah231515/receipt-wrangler:latest\n    entrypoint: ./entrypoint.sh\n    restart: always\n    volumes:\n      - ./data:/app/receipt-wrangler-api/data\n      - ./logs:/app/receipt-wrangler-api/logs\n    environment:\n      - ENCRYPTION_KEY=encryptionKey\n      - SECRET_KEY=secretKey\n      - DB_USER=wrangler\n      - DB_PASSWORD=changeMe\n      - DB_NAME=wrangler\n      - DB_HOST=db\n      - DB_PORT=5432\n      - DB_ENGINE=postgresql\n    depends_on:\n      db:\n        condition: service_healthy\n    ports:\n      - 9082:80\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var o=r(96540);const t={},s=o.createContext(t);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);