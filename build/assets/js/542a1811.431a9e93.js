"use strict";(self.webpackChunkreceipt_wrangler_doc=self.webpackChunkreceipt_wrangler_doc||[]).push([[5834],{80740:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=t(74848),a=t(28453);const r={},s="Environment Variables",o={id:"configuration/environment-variables",title:"Environment Variables",description:"Receipt Wrangler uses a number of environment variables to configure the application. Below is a list of the available",source:"@site/versioned_docs/version-5.x/configuration/environment-variables.md",sourceDirName:"configuration",slug:"/configuration/environment-variables",permalink:"/docs/configuration/environment-variables",draft:!1,unlisted:!1,tags:[],version:"5.x",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/category/configuration"},next:{title:"Self-hosted AI",permalink:"/docs/configuration/self-hosted-ai"}},l={},d=[{value:"#ENCRYPTION_KEY (Required)",id:"encryption_key-required",level:2},{value:"#SECRET_KEY (Required)",id:"secret_key-required",level:2},{value:"#DB_USER",id:"db_user",level:2},{value:"#DB_PASSWORD",id:"db_password",level:2},{value:"#DB_HOST",id:"db_host",level:2},{value:"#DB_PORT",id:"db_port",level:2},{value:"#DB_NAME",id:"db_name",level:2},{value:"#DB_ENGINE",id:"db_engine",level:2}];function c(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,i.jsx)(n.p,{children:"Receipt Wrangler uses a number of environment variables to configure the application. Below is a list of the available\nenvironment variables and their default values."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Check out ",(0,i.jsx)(n.a,{href:"https://www.random.org/strings/",children:"https://www.random.org/strings/"})," to generate random strings for the encryption key and secret key."]})}),"\n",(0,i.jsx)(n.h2,{id:"encryption_key-required",children:"#ENCRYPTION_KEY (Required)"}),"\n",(0,i.jsx)(n.p,{children:"The encryption key is required, and the application will fail to start, unless it is provided. The encryption key is\nused to encrypt sensitive information, such as email passwords, and API Keys."}),"\n",(0,i.jsx)(n.p,{children:"The provided key must be at least one character long, and ideally randomly generated. Internally, the provided keys are\ntransformed using the MD5\nhashing algorithm, thus, every key input will have an output of 128 bits which is then used to encrypt and decrypt via\nAES-128 bit encryption."}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.p,{children:"This encryption key cannot currently be rotated. If this key is changed, all encrypted data will be lost and will result\nin errors since the encrypted data will not be able to be decrypted."}),(0,i.jsx)(n.p,{children:"The records with encrypted data will need to deleted and recreated if this happens."})]}),"\n",(0,i.jsx)(n.h2,{id:"secret_key-required",children:"#SECRET_KEY (Required)"}),"\n",(0,i.jsx)(n.p,{children:"This is the secret key used to sign, and verify JWT tokens. This key is required, and the application will fail to\nstart, unless it is provided."}),"\n",(0,i.jsx)(n.p,{children:"The provided key should be between 16 and 32 characters long, randomly generated."}),"\n",(0,i.jsx)(n.h2,{id:"db_user",children:"#DB_USER"}),"\n",(0,i.jsx)(n.p,{children:"The database user that the application will use to connect to the database."}),"\n",(0,i.jsx)(n.h2,{id:"db_password",children:"#DB_PASSWORD"}),"\n",(0,i.jsx)(n.p,{children:"The database password that the application will use to connect to the database."}),"\n",(0,i.jsx)(n.h2,{id:"db_host",children:"#DB_HOST"}),"\n",(0,i.jsx)(n.p,{children:"The database host that the application will use to connect to the database."}),"\n",(0,i.jsx)(n.h2,{id:"db_port",children:"#DB_PORT"}),"\n",(0,i.jsx)(n.p,{children:"The database port that the application will use to connect to the database."}),"\n",(0,i.jsx)(n.h2,{id:"db_name",children:"#DB_NAME"}),"\n",(0,i.jsx)(n.p,{children:"The database name that the application will use to connect to the database."}),"\n",(0,i.jsx)(n.h2,{id:"db_engine",children:"#DB_ENGINE"}),"\n",(0,i.jsx)(n.p,{children:"The database engine that the application will use to connect to the database."}),"\n",(0,i.jsx)(n.p,{children:"valid options are:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"sqlite"}),"\n",(0,i.jsx)(n.li,{children:"postegresql"}),"\n",(0,i.jsx)(n.li,{children:"mysql"}),"\n",(0,i.jsx)(n.li,{children:"mariadb"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(96540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);